{"version":3,"sources":["components/Header/index.js","components/EmployeeCard/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EmployeeCard","props","id","alt","firstName","src","image","lastName","bigListing","href","email","target","rel","instagram","App","useState","employeeData","employeeState","setEmployeeState","orderState","setOrderState","filterState","setFilterState","useEffect","property","dataArray","filtered","newArray","filter","emp","favorite","previous_jobs","includes","length","filterData","filteredAndSorted","sort","a","b","onChange","event","value","map","employee","first_name","last_name","big_listing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ooEAceA,G,MAXA,WACX,OACI,iCACI,sBAAKC,UAAU,kBAAf,UACI,gDACA,2DCYDC,G,MAjBM,SAACC,GAClB,OACI,sBAAKC,GAAKD,EAAMC,GAAKH,UAAU,OAA/B,UACI,qBAAKA,UAAU,gBAAf,SACI,qBAAKI,IAAMF,EAAMG,UAAYC,IAAMJ,EAAMK,UAE7C,sBAAKP,UAAU,OAAf,UACI,+BAAME,EAAMG,UAAZ,IAA0BH,EAAMM,YAChC,oBAAGR,UAAU,OAAb,+BAAwCE,EAAMO,WAA9C,cACA,mBAAGT,UAAU,OAAOU,KAAI,iBAAYR,EAAMS,OAASC,OAAO,SAASC,IAAI,aAAvE,SAAsFX,EAAMS,QAC5F,uBACA,mBAAGR,GAAG,aAAaH,UAAU,OAAOU,KAAOR,EAAMY,UAAYF,OAAO,SAASC,IAAI,aAAjF,SAA8F,mBAAGb,UAAU,+BCmH5Ge,G,MA1HH,WAAO,IAAD,EAE0BC,mBAASC,GAFnC,mBAETC,EAFS,KAEMC,EAFN,OAGoBH,mBAAS,MAH7B,mBAGTI,EAHS,KAGGC,EAHH,OAIsBL,mBAAS,YAJ/B,mBAITM,EAJS,KAIIC,EAJJ,KAwEhB,OAVAC,qBAAU,WAER,IAzDgBC,EAAUC,EAyDpBC,EA/BW,SAACF,EAAUC,GAC5B,IAAIE,EACJ,OAAOH,GACL,IAAK,WACHG,EAAWF,EAAUG,QACnB,SAAAC,GAAG,OAAqB,IAAjBA,EAAIC,YAEb,MACF,IAAK,QACHH,EAAWF,EAAUG,QACnB,SAAAC,GAAG,OAAIA,EAAIE,cAAcC,SAAS,YAEpC,MACF,IAAK,QACHL,EAAWF,EAAUG,QACnB,SAAAC,GAAG,OAAIA,EAAIE,cAAcC,SAAS,YAEpC,MACF,IAAK,cACHL,EAAWF,EAAUG,QACnB,SAAAC,GAAG,OAAiC,IAA7BA,EAAIE,cAAcE,UAE3B,MACF,QACEN,EAAWF,EAEf,OAAOE,EAKUO,CAAWb,EAAaL,GAEnCmB,GA3DoBV,EA2DqBC,EAzD9B,QAFDF,EA2DmBL,IAxDtB,YAAIM,GAAWW,MAAK,SAACC,EAAGC,GACjC,OAAOD,EAAEb,GAAYc,EAAEd,MAGV,gBAAbA,EACS,YAAIC,GAAWW,MAAK,SAACC,EAAGC,GACjC,OAAOA,EAAEd,GAAYa,EAAEb,MAGd,YAAIC,GAAWW,MAAK,SAACC,EAAGC,GACjC,OAAKD,EAAEb,GAAYc,EAAEd,IACX,EAELa,EAAEb,GAAYc,EAAEd,GACZ,EAEF,MA0CXN,EAAiBiB,KAEhB,CAAChB,EAAYE,IAGd,qCACE,cAAC,EAAD,IACA,iCACE,sBAAKtB,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACE,4CACA,yBACEG,GAAG,QACHqC,SAAU,SAAAC,GAAK,OAAIpB,EAAcoB,EAAM7B,OAAO8B,QAFhD,UAII,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,oCAGN,sBAAK1C,UAAU,SAAf,UACE,yCACA,yBACEG,GAAG,SACHqC,SAAU,SAAAC,GAAK,OAAIlB,EAAekB,EAAM7B,OAAO8B,QAFjD,UAII,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,WAAd,8BACA,wBAAQA,MAAM,QAAd,2BACA,wBAAQA,MAAM,QAAd,2BACA,wBAAQA,MAAM,cAAd,uCAIR,qBAAK1C,UAAU,iBAAf,SACIkB,EAAcyB,KAAI,SAAAC,GAAQ,OAC1B,cAAC,EAAD,CACEzC,GAAIyC,EAASzC,GAEbE,UAAWuC,EAASC,WACpBrC,SAAUoC,EAASE,UACnBvC,MAAOqC,EAASrC,MAChBI,MAAOiC,EAASjC,MAChBG,UAAW8B,EAAS9B,UACpBL,WAAYmC,EAASG,aANhBH,EAASzC,iBCtGb6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cea69aca.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\n\nconst Header = () => {\n    return (\n        <header>\n            <div className='title-container'>\n                <h1>Selling Sunset</h1>\n                <h2>Employee Directory</h2>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './style.css';\n\nconst EmployeeCard = (props) => {\n    return (\n        <div id={ props.id } className='card'>\n            <div className='img-container'>\n                <img alt={ props.firstName } src={ props.image } />\n            </div>\n            <div className='info'>\n                <h3>{ props.firstName } { props.lastName }</h3>\n                <p className='text'>biggest listing: ${ props.bigListing } million</p>\n                <a className='text' href={`mailto:${props.email}`} target='_blank' rel='noreferrer'>{ props.email }</a>\n                <br/>\n                <a id='insta-icon' className='text' href={ props.instagram } target='_blank' rel='noreferrer'><i className='fab fa-instagram'></i></a>\n            </div>\n        </div>\n    )\n}\n\nexport default EmployeeCard;","import React, { useEffect, useState } from 'react';\nimport employeeData from './employees.json';\nimport Header from './components/Header';\nimport EmployeeCard from './components/EmployeeCard';\n\nimport './App.css';\n\nconst App = () => {\n\n  const [employeeState, setEmployeeState] = useState(employeeData);\n  const [orderState, setOrderState] = useState('id');\n  const [filterState, setFilterState] = useState('everyone');\n\n  // helper function to sort data\n  const sortData = (property, dataArray) => {\n    let newArray;\n    if (property === 'id') {\n      newArray = [...dataArray].sort((a, b) => {\n        return a[property] - b[property];\n      });\n    }\n    if (property === 'big_listing') {\n      newArray = [...dataArray].sort((a, b) => {\n        return b[property] - a[property];\n      });\n    } else {\n      newArray = [...dataArray].sort((a, b) => {\n        if ( a[property] < b[property] ) {\n          return -1;\n        }\n        if ( a[property] > b[property] ) {\n          return 1;\n        }\n        return 0;\n      })\n    }\n    return newArray;\n  };\n\n  // helper function to filter data\n  const filterData = (property, dataArray) => {\n    let newArray;\n    switch(property) {\n      case 'favorite':\n        newArray = dataArray.filter(\n          emp => emp.favorite === true\n        )\n        break;\n      case 'actor':\n        newArray = dataArray.filter(\n          emp => emp.previous_jobs.includes('actor')\n        )\n        break;\n      case 'model':\n        newArray = dataArray.filter(\n          emp => emp.previous_jobs.includes('model')\n        )\n        break;\n      case 'real_estate':\n        newArray = dataArray.filter(\n          emp => emp.previous_jobs.length === 0\n        )\n        break;\n      default:\n        newArray = dataArray;\n    }\n    return newArray;\n  }\n\n  useEffect(() => {\n    // filter employee data\n    const filtered = filterData(filterState, employeeData);\n    // sort filtered data\n    const filteredAndSorted = sortData(orderState, filtered);\n    // set state\n    setEmployeeState(filteredAndSorted);\n\n  }, [orderState, filterState])\n\n  return (\n    <>\n      <Header />\n      <main>\n        <div className='options'>\n          <div className='sort'>\n            <span>sort by:</span>\n            <select \n              id='order'\n              onChange={event => setOrderState(event.target.value)}\n              >\n                <option value='id'>id</option>\n                <option value='first_name'>first name</option>\n                <option value='last_name'>last name</option>\n                <option value='big_listing'> biggest listing</option>\n            </select>\n          </div>\n          <div className='filter'>\n            <span>show:</span>\n            <select \n              id='filter'\n              onChange={event => setFilterState(event.target.value)}\n              >\n                <option value='none'>everyone</option>\n                <option value='favorite'>Jason's favorite</option>\n                <option value='actor'>former actors</option>\n                <option value='model'>former models</option>\n                <option value='real_estate'>long time agents</option>\n            </select>\n          </div>\n        </div>\n        <div className='flex-container'>\n          { employeeState.map(employee => (\n            <EmployeeCard\n              id={employee.id}\n              key={employee.id}\n              firstName={employee.first_name}\n              lastName={employee.last_name}\n              image={employee.image}\n              email={employee.email}\n              instagram={employee.instagram}\n              bigListing={employee.big_listing}\n            />\n          ))}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}